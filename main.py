import os
import asyncio
import random
from datetime import datetime
from dotenv import load_dotenv
from telegram import Bot
from telegram.error import TelegramError

# 1. CONFIGURA√á√ïES INICIAIS
load_dotenv()
TOKEN = os.getenv("BOT_TOKEN")
CHAT_ID = os.getenv("CHAT_ID")
URL_CADASTRO = os.getenv("URL_CADASTRO", "https://lkwn.cc/f1c1c45a")

bot = Bot(token=TOKEN)

# 2. LISTA DE DIRE√á√ïES E COBERTURAS (ESCADA ASI√ÅTICA COM COBERTURA)
direcoes = [
    {"direcao": "Vermelho", "cor_direcao": "üî¥", "cobertura": "Amarelo", "cor_cobertura": "üü°"},
    {"direcao": "Preto", "cor_direcao": "‚ö´", "cobertura": "Amarelo", "cor_cobertura": "üü°"},
]

# 3. FUN√á√ÉO PARA GERAR UM NOVO SINAL ALEAT√ìRIO
def gerar_sinal():
    return random.choice(direcoes)

# 4. FUN√á√ÉO PRINCIPAL DE ENVIO DE SINAL
async def enviar_sinal():
    try:
        sinal = gerar_sinal()

        mensagem_sinal = f"""
üî• OPORTUNIDADE DE ENTRADA DETECTADA üî•

‚ñ™Ô∏è Ativo: BAC BO  
‚ñ™Ô∏è Dire√ß√£o: {sinal['direcao']} {sinal['cor_direcao']}  
‚ñ™Ô∏è Cobertura: {sinal['cobertura']} {sinal['cor_cobertura']}  
‚ñ™Ô∏è Estrat√©gia: Escada Asi√°tica com Cobertura  

PLANO DE A√á√ÉO:  
1Ô∏è‚É£ Entrada Principal: Meta de +4%  
2Ô∏è‚É£ Prote√ß√£o 1 (Gale): Se necess√°rio  
3Ô∏è‚É£ Prote√ß√£o 2 (Gale): Se necess√°rio  

‚ö†Ô∏è Opere com precis√£o. Siga a gest√£o.

üéÅ B√îNUS DE CADASTRO + GIROS GR√ÅTIS  
üëâ {URL_CADASTRO}
"""

        await bot.send_message(chat_id=CHAT_ID, text=mensagem_sinal)
        print(f"[{datetime.now().strftime('%H:%M:%S')}] Sinal enviado com sucesso.")

    except TelegramError as e:
        print(f"[{datetime.now().strftime('%H:%M:%S')}] Erro ao enviar mensagem: {e}")

# 5. LOOP PARA ENVIAR SINAL A CADA 10 MINUTOS
async def main():
    while True:
        await enviar_sinal()
        await asyncio.sleep(600)  # 10 minutos

# 6. EXECUTAR
if __name__ == "__main__":
    asyncio.run(main())
