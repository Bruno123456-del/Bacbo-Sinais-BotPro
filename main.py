# -*- coding: utf-8 -*-
# ===================================================================================
# BOT DE SINAIS VIP/FREE - VERS√ÉO 20.0 "CONVERS√ÉO M√ÅXIMA"
# ===================================================================================

import logging
import os
import random
import asyncio
from datetime import datetime, timedelta
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ApplicationBuilder, ContextTypes, CommandHandler, CallbackQueryHandler, JobQueue
from apscheduler.schedulers.asyncio import AsyncIOScheduler
from apscheduler.triggers.interval import IntervalTrigger
from dotenv import load_dotenv

# ==========================================
# CARREGANDO VARI√ÅVEIS DE AMBIENTE
# ==========================================
load_dotenv()
BOT_TOKEN = os.getenv("BOT_TOKEN")
CANAL_ID = int(os.getenv("CANAL_ID"))         # Canal Free
VIP_CANAL_ID = int(os.getenv("VIP_CANAL_ID")) # Canal VIP
ADMIN_ID = int(os.getenv("ADMIN_ID"))

# ==========================================
# LOGS
# ==========================================
logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s",
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# ==========================================
# LISTAS E VARI√ÅVEIS GLOBAIS
# ==========================================
usuarios_vip = set()        # Guarda IDs VIP
usuarios_free = set()       # Guarda IDs Free
mensagens_free = [
    "üí• Sinal Free: Ganhe com seguran√ßa! Para desbloquear VIP e b√¥nus exclusivos clique abaixo.",
    "üöÄ √öltimos resultados Free: Quem entra no VIP garante acesso completo e b√¥nus."
]
mensagens_vip = [
    "üèùÔ∏è Bem-vindo ao VIP! Aqui voc√™ desbloqueia b√¥nus exclusivos: 600 viagens, ebook profissional, 3 jogos e esportes.",
    "üí∞ Gest√£o de banca avan√ßada: juros compostos + mala de dinheiro + viagem para Dubai!"
]
mensagem_urgencia = (
    "‚ö†Ô∏è Vagas restantes! Acabei de receber autoriza√ß√£o para liberar apenas os cupos restantes.\n"
    "‚è≥ Gest√£o vai ter acesso por 90 dias gr√°tis + b√¥nus de 600 viages + 2 eBooks Profissionais + 3 jogos e esportes!\n"
    "üìå Entre agora e garanta seu lugar VIP!"
)

# ==========================================
# FUN√á√ïES AUXILIARES
# ==========================================
async def enviar_mensagem_free(update: Update, contexto: ContextTypes.DEFAULT_TYPE):
    """Envia sinais Free e persuasivos para convers√£o."""
    msg = random.choice(mensagens_free)
    bot = contexto.bot
    await bot.send_message(chat_id=CANAL_ID, text=msg)
    logger.info("Mensagem Free enviada")

async def enviar_mensagem_vip(update: Update, contexto: ContextTypes.DEFAULT_TYPE, user_id: int):
    """Envia sinais VIP apenas para usu√°rios VIP."""
    if user_id not in usuarios_vip:
        logger.info(f"Usu√°rio {user_id} n√£o √© VIP, bloqueando mensagem")
        return
    msg = random.choice(mensagens_vip)
    bot = contexto.bot
    await bot.send_message(chat_id=VIP_CANAL_ID, text=msg)
    logger.info(f"Mensagem VIP enviada para {user_id}")

async def mensagem_urgente_vip(bot, user_id: int):
    """Mensagem de urg√™ncia com b√¥nus agressivos."""
    await bot.send_message(chat_id=user_id, text=mensagem_urgencia)
    logger.info(f"Mensagem de urg√™ncia VIP enviada para {user_id}")

# ==========================================
# FUN√á√ÉO DE AUTOSINAL
# ==========================================
async def autosinal(context: ContextTypes.DEFAULT_TYPE):
    """Sinal peri√≥dico Free para convers√£o."""
    bot = context.bot
    await enviar_mensagem_free(None, context)
    # Envia urg√™ncia para alguns usu√°rios Free aleat√≥rios
    for user_id in list(usuarios_free)[:5]:  # s√≥ 5 aleat√≥rios por vez
        await mensagem_urgente_vip(bot, user_id)
# ==========================================
# HANDLERS DE COMANDOS
# ==========================================
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    usuarios_free.add(user_id)
    await update.message.reply_text(
        "üëã Bem-vindo! Voc√™ est√° no Free Signals.\n"
        "üí° Para desbloquear VIP e b√¥nus incr√≠veis clique no bot√£o abaixo.",
        reply_markup=InlineKeyboardMarkup([
            [InlineKeyboardButton("üîì Entrar VIP", url="https://win-agegate-promo-68.lovable.app/")]
        ])
    )

async def vip(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """Adiciona usu√°rio ao VIP manualmente (Admin)"""
    user_id = int(context.args[0])
    usuarios_vip.add(user_id)
    usuarios_free.discard(user_id)
    await update.message.reply_text(f"‚úÖ Usu√°rio {user_id} promovido a VIP!")
    logger.info(f"Usu√°rio {user_id} adicionado ao VIP")

async def status(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """Mostra status atual dos usu√°rios"""
    await update.message.reply_text(
        f"Usuarios Free: {len(usuarios_free)}\nUsuarios VIP: {len(usuarios_vip)}"
    )

# ==========================================
# CONFIGURA√á√ÉO DO AGENDADOR
# ==========================================
scheduler = AsyncIOScheduler()

scheduler.add_job(
    autosinal,
    trigger=IntervalTrigger(minutes=35),
    kwargs={},
    id="autosinal",
    replace_existing=True
)

# ==========================================
# INICIALIZA√á√ÉO DO BOT
# ==========================================
async def main():
    app = ApplicationBuilder().token(BOT_TOKEN).build()
    # Comandos
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("vip", vip))
    app.add_handler(CommandHandler("status", status))
    # Iniciar agendador
    scheduler.start()
    # Rodar bot
    await app.start()
    logger.info("üöÄ Bot iniciado com sucesso!")
    await app.updater.start_polling()
    await app.updater.idle()

if __name__ == "__main__":
    import asyncio
    asyncio.run(main())
